{
  "hash": "5b660d7d1626d96b496fade158161718",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Test 1 (26th July 2024)\"\nauthor: \"Olamide Adu\"\nformat: pdf\nlinestretch: 1\nmainfont: \"IBM Plex Sans\"\nmonofont: \"Ubuntu Mono\"\n---\n\n\n# Questions\n\n1. create a vector of even numbers from 200 to 400 and save it in a variable called `my_even_number`. Print your result\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_even_number <- seq(200, 400, 2)\nmy_even_number\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 200 202 204 206 208 210 212 214 216 218 220 222 224 226 228 230 232 234\n [19] 236 238 240 242 244 246 248 250 252 254 256 258 260 262 264 266 268 270\n [37] 272 274 276 278 280 282 284 286 288 290 292 294 296 298 300 302 304 306\n [55] 308 310 312 314 316 318 320 322 324 326 328 330 332 334 336 338 340 342\n [73] 344 346 348 350 352 354 356 358 360 362 364 366 368 370 372 374 376 378\n [91] 380 382 384 386 388 390 392 394 396 398 400\n```\n\n\n:::\n:::\n\n\n2. How many even numbers do we have in `my_even_number`\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(my_even_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 101\n```\n\n\n:::\n:::\n\n\n3. create a vector of odd numbers from 30 to 108 and save it in a variable called `my_odd_number`\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_odd_number <- seq(29, 108, 2)\n```\n:::\n\n\n4. what is the median of `my_odd_number`\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(my_odd_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 68\n```\n\n\n:::\n:::\n\n\n5. what is the average of `my_even_number`\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(my_even_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 300\n```\n\n\n:::\n:::\n\n\n6. Using R, find the remainder of 498 divided by 5\n\n::: {.cell}\n\n```{.r .cell-code}\n498%%5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n7. Change the word **greatest** from lower to upper letter\n\n::: {.cell}\n\n```{.r .cell-code}\ntoupper(\"greatest\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"GREATEST\"\n```\n\n\n:::\n:::\n\n\n8. Get the total value if you add `my_even_number`and `my_odd_number`\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(my_even_number, my_odd_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 33020\n```\n\n\n:::\n:::\n\n\n9. create a sequence of number from -10 to 10. and save it to the variable name `my_number`. Confirm if `my_number` data type is a character data type\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_number <- -10:10\n\nis.character(my_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n10. If your answer in the previous is **TRUE** find the sum, else convert it to a character type\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(my_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nas.character(my_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"-10\" \"-9\"  \"-8\"  \"-7\"  \"-6\"  \"-5\"  \"-4\"  \"-3\"  \"-2\"  \"-1\"  \"0\"   \"1\"  \n[13] \"2\"   \"3\"   \"4\"   \"5\"   \"6\"   \"7\"   \"8\"   \"9\"   \"10\" \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}